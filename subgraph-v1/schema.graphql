type PoolConfiguration @entity {
  id: ID!
  pool: Pool!
  marginRequirement: BigInt!
  marginMin: BigInt!
  marginMax: BigInt!
  loanTenure: BigInt!
  optimalTrancheRatio: BigInt!
  optimalIncomeRatio: BigInt!
}

type Pool @entity {
  id: ID!
  isActive: Boolean!
  underlyingAsset: Bytes!
  symbol: String!
  decimals: BigInt!
  juniorTrancheTotalLiquidity: BigInt!
  juniorTrancheLiquidityRate: BigInt!
  seniorTrancheTotalLiquidity: BigInt!
  seniorTrancheAvailableLiquidity: BigInt!
  seniorTrancheLiquidityRate: BigInt!
  totalLiquidity: BigInt!
  totalBorrow: BigInt!
  trancheRatio: BigInt!
  configuration: PoolConfiguration
}

type UserData @entity {
  id: ID!
  depositData: [UserDepositData!]! @derivedFrom(field: "user")
  unbondings: [Unbonding!]! @derivedFrom(field: "user")
}

type UserDepositData @entity {
  id: ID!
  underlyingAsset: Bytes!
  juniorTrancheBalance: BigInt!
  seniorTrancheBalance: BigInt!
  withdrawableJuniorBalance: BigInt!
  withdrawableSeniorBalance: BigInt!
  decimals: BigInt!
  user: UserData!
}

type Unbonding @entity {
  id: ID!
  time: BigInt!
  amount: BigInt!
  type: Int
  user: UserData!
}
